class RoundRobinLoadBalancer:
  def __init__(self, servers):
    self.servers = servers
    self.index = 0

  def get_next_server(self):
    server = self.servers[self.index]
    self.index = (self.index +1) % len(self.servers)
    return server

  def add_server(self, server):
    self.servers.append(server)

  def remove_server(self, server):
    self.servers.remove(server)
    if self.index >= len(self.servers):
      self.index = 0

if __name__ == "__main__":
  servers = ["server1", "server2", "server3"]
  load_balancer = RoundRobinLoadBalancer(servers)

  for i in range(10):
    print(f"Request {i+1}: {load_balancer.get_next_server()}")
